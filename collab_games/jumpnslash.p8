pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--jump 'n' slash
--designed by joseph turzitti
--programmed by henry holman

function _init()
end

function _update60()
	p1.update()
end

function _draw()
	cls() --clear screen
	
	--draw the map
	map(0,0,
	    0,0,
	    16,16)
	
	--draw the player
	p1.draw(true)
end
-->8
--tab 1: reference

--[[
sprite flags
------------

num | hex  | color  | meaning
---------------------------
 0  | 0x1  | red    | hurts player
 1  | 0x2  | orange |
 2  | 0x4  | yellow | player can pass thru bottom
 3  | 0x8  | green  | player can land on top of
 4  | 0x10 | blue   |
 5  | 0x20 | gray   |
 6  | 0x40 | pink   |
 7  | 0x80 | tan    |
]]
-->8
--tab 2: player

p1={
	x=16,y=100,
	x_vel=0,y_vel=0,
	w=8,h=16,
	lft=nil,--left x
	rgt=nil,--right x
	top=nil,--top y
	btm=nil,--bottom y
	ctr=nil,--center x
	mdl=nil,--middle y
	facing=1, --1=right, -1=left
	bonked=false,
	landed=false,
}
jump_height=-4
walk_speed=1
gravity=0.2

function p1.update()
	p1.read_inputs()
	
	p1.platform_collision()
	
	--apply forces
	p1.y+=p1.y_vel
	if p1.landed==false then
		p1.y_vel+=gravity
	end
	p1.x+=p1.x_vel
	
	p1.update_landmarks()
	
end

function p1.read_inputs()
	--read for inputs
	if btnp(⬆️) and p1.landed==true then
		p1.y_vel=jump_height
		p1.landed=false
	end
	
	if btn(➡️) then
		p1.x+=1
	end
	if btn(⬅️) then
	 p1.x-=1
	end
	
	p1.update_landmarks()
end

function p1.update_landmarks()
	p1.lft=p1.x
	p1.rgt=p1.x+p1.w-1
	p1.top=p1.y
	p1.btm=p1.y+p1.h-1
	p1.ctr=(p1.lft+p1.rgt)/2
	p1.mdl=(p1.top+p1.btm)/2
end

function p1.platform_collision()

	--check if you bonked your
	--head if you're on your
	--way up
	if p1.y_vel<0 then
		--check both top corners
	end
	
	--check if you landed on a
	--platform if you're on your
	--way down
	if p1.y_vel>=0 then
		--check both btm corners
		p1.landed=p1.land_detection()
		if p1.landed==true then
			p1.y_vel=0
			p1.stand_correction()
		end
	end
	
end

function p1.land_detection()
	--checks the row below the
	--bottom of the sprite
	local tile_id_l=mget(p1.lft/8,(p1.btm+1)/8)
	local tile_id_r=mget(p1.rgt/8,(p1.btm+1)/8)
	return fget(tile_id_l,3) or fget(tile_id_r,3)
end

function p1.stand_detection()
	--checks the bottom row of the
	--sprite
	local tile_id_l=mget(p1.lft/8,p1.btm/8)
	local tile_id_r=mget(p1.rgt/8,p1.btm/8)
	return not(fget(tile_id_l,3) or fget(tile_id_r,3))
end

function p1.stand_correction()
	--stand correction ensures
	--that if you land inside of a
	--tile, your position will be
	--adjusted such that you will
	--stand on top of that tile,
	--rather than remain inside it
	
	--land detection checks if the
	--row of pixels below the
	--bottom of the sprite have
	--collided with a landable
	--tile
	
	--stand correction works by
	--making sure the bottom row
	--of a sprite is -not- inside
	--a landable tile, and that
	--the row below it -is-
	
	while p1.stand_detection()==false do
		p1.y-=1
		p1.update_landmarks()
	end
end
	
function p1.draw(debug)
	sspr(8,0,
	     8,16,
	     p1.x,p1.y)
	
	if debug then
		--print bonk detection
		print(p1.bonked,10,10,15)
		--print land detection
		print(p1.stand_detection(),10,16,15)
		print(p1.landed,10,22,15)
		
		--draw landmark pixels
		if true then
			local pcol=8
			--draw top left corner pixel
			pset(p1.lft,
			     p1.top,
			     pcol)
			--draw top center pixel
			pset(p1.ctr,
			     p1.top,
			     pcol)
			--draw top right corner pixel
			pset(p1.rgt,
			     p1.top,
			     pcol)
			
			--draw left middle pixel
			pset(p1.lft,
			     p1.mdl,
			     pcol)
			--draw right middle pixel
			pset(p1.rgt,
			     p1.mdl,
			     pcol)
			
			--draw btm left corner pixel
			pset(p1.lft,
			     p1.btm,
			     pcol)
			--draw btm center pixel
			pset(p1.ctr,
			     p1.btm,
			     pcol)
			--draw btm right corner pixel
			pset(p1.rgt,
			     p1.btm,
			     pcol)
		end
	end
end
__gfx__
0000000000111100bbb0000000999900009999000000000000000000000000004444444488888888aaaaaaaa0000000000000000000000000000000000000000
0000000001111110000bb00009999990099998900000000000000000000000004555555488888888eaeaeaea0000000000000000000000000000000000000000
00700700111111110bb00b0099999999999999890000000000000000000000004555555488888888707070700000000000000000000000000000000000000000
0007700011111111000bb0b099999999999888880000000000000000000000004555555488888888070707070000000000000000000000000000000000000000
000770001111111100b0b0b099999999999888880000000000000000000000004555555488888888707070700000000000000000000000000000000000000000
0070070011111c11000b0b0b99999899999999890000000000000000000000004555555488888888070707070000000000000000000000000000000000000000
00000000111111c1000b0b0b99999989099998900000000000000000000000004555555488888888707070700000000000000000000000000000000000000000
0000000011cccccc000b0b0b99888888009999000000000000000000000000004444444488888888070707070000000000000000000000000000000000000000
0000000011cccccc000b0b0b99888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111c1000b0b0b99999989000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000011111c11000b0b0b99999899000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000001111111100b0b0b099999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000011111111000bb0b099999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111110bb00b0099999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001111110000bb00009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000111100bbb0000000999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
000000000000000008010c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000a0a0a0a00000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
080000000a000000000000080808000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0800000000000909090900000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
